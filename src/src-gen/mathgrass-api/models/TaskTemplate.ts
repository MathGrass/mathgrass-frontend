/* tslint:disable */
/* eslint-disable */
/**
 * MathGrass
 * This is the OpenAPI specification for MathGrass
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: andreas.domanowski@tu-dresden.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Label } from './Label';
import {
    LabelFromJSON,
    LabelFromJSONTyped,
    LabelToJSON,
} from './Label';
import type { TaskHint } from './TaskHint';
import {
    TaskHintFromJSON,
    TaskHintFromJSONTyped,
    TaskHintToJSON,
} from './TaskHint';

/**
 * 
 * @export
 * @interface TaskTemplate
 */
export interface TaskTemplate {
    /**
     * 
     * @type {number}
     * @memberof TaskTemplate
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TaskTemplate
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof TaskTemplate
     */
    question?: string;
    /**
     * 
     * @type {number}
     * @memberof TaskTemplate
     */
    taskSolver?: number;
    /**
     * 
     * @type {Array<TaskHint>}
     * @memberof TaskTemplate
     */
    hints?: Array<TaskHint>;
    /**
     * 
     * @type {Array<Label>}
     * @memberof TaskTemplate
     */
    labels?: Array<Label>;
}

/**
 * Check if a given object implements the TaskTemplate interface.
 */
export function instanceOfTaskTemplate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaskTemplateFromJSON(json: any): TaskTemplate {
    return TaskTemplateFromJSONTyped(json, false);
}

export function TaskTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskTemplate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'question': !exists(json, 'question') ? undefined : json['question'],
        'taskSolver': !exists(json, 'taskSolver') ? undefined : json['taskSolver'],
        'hints': !exists(json, 'hints') ? undefined : ((json['hints'] as Array<any>).map(TaskHintFromJSON)),
        'labels': !exists(json, 'labels') ? undefined : ((json['labels'] as Array<any>).map(LabelFromJSON)),
    };
}

export function TaskTemplateToJSON(value?: TaskTemplate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'label': value.label,
        'question': value.question,
        'taskSolver': value.taskSolver,
        'hints': value.hints === undefined ? undefined : ((value.hints as Array<any>).map(TaskHintToJSON)),
        'labels': value.labels === undefined ? undefined : ((value.labels as Array<any>).map(LabelToJSON)),
    };
}

