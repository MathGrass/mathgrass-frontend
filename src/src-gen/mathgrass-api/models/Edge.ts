/* tslint:disable */
/* eslint-disable */
/**
 * MathGrass
 * This is the OpenAPI specification for MathGrass
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: andreas.domanowski@tu-dresden.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Vertex } from './Vertex';
import {
    VertexFromJSON,
    VertexFromJSONTyped,
    VertexToJSON,
} from './Vertex';

/**
 * 
 * @export
 * @interface Edge
 */
export interface Edge {
    /**
     * 
     * @type {Vertex}
     * @memberof Edge
     */
    firstVertex: Vertex;
    /**
     * 
     * @type {Vertex}
     * @memberof Edge
     */
    secondVertex: Vertex;
    /**
     * 
     * @type {string}
     * @memberof Edge
     */
    label?: string;
}

/**
 * Check if a given object implements the Edge interface.
 */
export function instanceOfEdge(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "firstVertex" in value;
    isInstance = isInstance && "secondVertex" in value;

    return isInstance;
}

export function EdgeFromJSON(json: any): Edge {
    return EdgeFromJSONTyped(json, false);
}

export function EdgeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Edge {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'firstVertex': VertexFromJSON(json['firstVertex']),
        'secondVertex': VertexFromJSON(json['secondVertex']),
        'label': !exists(json, 'label') ? undefined : json['label'],
    };
}

export function EdgeToJSON(value?: Edge | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'firstVertex': VertexToJSON(value.firstVertex),
        'secondVertex': VertexToJSON(value.secondVertex),
        'label': value.label,
    };
}

