/* tslint:disable */
/* eslint-disable */
/**
 * MathGrass
 * This is the OpenAPI specification for MathGrass
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: andreas.domanowski@tu-dresden.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Question
 */
export interface Question {
    /**
     * 
     * @type {string}
     * @memberof Question
     */
    question: string;
    /**
     * 
     * @type {string}
     * @memberof Question
     */
    questionType: QuestionQuestionTypeEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof Question
     */
    possibleAnswers?: Array<string>;
}


/**
 * @export
 */
export const QuestionQuestionTypeEnum = {
    Freetext: 'freetext',
    Number: 'number',
    MarkNodes: 'mark_nodes',
    MarkEdges: 'mark_edges'
} as const;
export type QuestionQuestionTypeEnum = typeof QuestionQuestionTypeEnum[keyof typeof QuestionQuestionTypeEnum];


/**
 * Check if a given object implements the Question interface.
 */
export function instanceOfQuestion(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "question" in value;
    isInstance = isInstance && "questionType" in value;

    return isInstance;
}

export function QuestionFromJSON(json: any): Question {
    return QuestionFromJSONTyped(json, false);
}

export function QuestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Question {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'question': json['question'],
        'questionType': json['questionType'],
        'possibleAnswers': !exists(json, 'possible_answers') ? undefined : json['possible_answers'],
    };
}

export function QuestionToJSON(value?: Question | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'question': value.question,
        'questionType': value.questionType,
        'possible_answers': value.possibleAnswers,
    };
}

